Grammar

    0 $accept: program $end

    1 program: variable_list code_list

    2 variable_list: %empty
    3              | variable_list variable

    4 @1: %empty

    5 variable: _LABEL_DEF @1 _WORD _NUMBER

    6 code_list: code_line
    7          | code_list code_line

    8 code_line: label_def
    9          | asm_line

   10 label_def: _LABEL_DEF

   11 asm_line: arithmetic
   12         | flowcontrol
   13         | stack
   14         | _HALT

   15 arithmetic: _ADD input _COMMA input _COMMA output
   16           | _SUB input _COMMA input _COMMA output
   17           | _MUL input _COMMA input _COMMA output
   18           | _DIV input _COMMA input _COMMA output
   19           | _MOV input _COMMA output

   20 flowcontrol: _CMP input _COMMA input
   21            | _JMP label
   22            | _JEQ label
   23            | _JNE label
   24            | _JGT label
   25            | _JLT label
   26            | _JGE label
   27            | _JLE label
   28            | _JC label
   29            | _JNC label
   30            | _JO label
   31            | _JNO label

   32 stack: _PUSH input
   33      | _POP output
   34      | _CALL label
   35      | _RET

   36 label: _LABEL

   37 output: _REGISTER
   38       | _NUMBER _LPAREN _REGISTER _RPAREN
   39       | _LPAREN _REGISTER _RPAREN
   40       | label

   41 input: _CONSTANT
   42      | _ADDRESS
   43      | output


Terminals, with rules where they appear

$end (0) 0
error (256)
_WORD (258) 5
_PUSH (259) 32
_POP (260) 33
_CALL (261) 34
_RET (262) 35
_CMP (263) 20
_JMP (264) 21
_JEQ (265) 22
_JNE (266) 23
_JGT (267) 24
_JLT (268) 25
_JGE (269) 26
_JLE (270) 27
_JC (271) 28
_JNC (272) 29
_JO (273) 30
_JNO (274) 31
_ADD (275) 15
_SUB (276) 16
_MUL (277) 17
_DIV (278) 18
_MOV (279) 19
_HALT (280) 14
_REGISTER (281) 37 38 39
_CONSTANT (282) 41
_NUMBER (283) 5 38
_LABEL_DEF (284) 5 10
_LABEL (285) 36
_ADDRESS (286) 42
_COMMA (287) 15 16 17 18 19 20
_LPAREN (288) 38 39
_RPAREN (289) 38 39


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
variable_list (37)
    on left: 2 3, on right: 1 3
variable (38)
    on left: 5, on right: 3
@1 (39)
    on left: 4, on right: 5
code_list (40)
    on left: 6 7, on right: 1 7
code_line (41)
    on left: 8 9, on right: 6 7
label_def (42)
    on left: 10, on right: 8
asm_line (43)
    on left: 11 12 13 14, on right: 9
arithmetic (44)
    on left: 15 16 17 18 19, on right: 11
flowcontrol (45)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31, on right: 12
stack (46)
    on left: 32 33 34 35, on right: 13
label (47)
    on left: 36, on right: 21 22 23 24 25 26 27 28 29 30 31 34 40
output (48)
    on left: 37 38 39 40, on right: 15 16 17 18 19 33 43
input (49)
    on left: 41 42 43, on right: 15 16 17 18 19 20 32


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (variable_list)

    program        go to state 1
    variable_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: variable_list . code_list
    3 variable_list: variable_list . variable

    _PUSH       shift, and go to state 4
    _POP        shift, and go to state 5
    _CALL       shift, and go to state 6
    _RET        shift, and go to state 7
    _CMP        shift, and go to state 8
    _JMP        shift, and go to state 9
    _JEQ        shift, and go to state 10
    _JNE        shift, and go to state 11
    _JGT        shift, and go to state 12
    _JLT        shift, and go to state 13
    _JGE        shift, and go to state 14
    _JLE        shift, and go to state 15
    _JC         shift, and go to state 16
    _JNC        shift, and go to state 17
    _JO         shift, and go to state 18
    _JNO        shift, and go to state 19
    _ADD        shift, and go to state 20
    _SUB        shift, and go to state 21
    _MUL        shift, and go to state 22
    _DIV        shift, and go to state 23
    _MOV        shift, and go to state 24
    _HALT       shift, and go to state 25
    _LABEL_DEF  shift, and go to state 26

    variable     go to state 27
    code_list    go to state 28
    code_line    go to state 29
    label_def    go to state 30
    asm_line     go to state 31
    arithmetic   go to state 32
    flowcontrol  go to state 33
    stack        go to state 34


State 3

    0 $accept: program $end .

    $default  accept


State 4

   32 stack: _PUSH . input

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 43


State 5

   33 stack: _POP . output

    _REGISTER  shift, and go to state 35
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 44


State 6

   34 stack: _CALL . label

    _LABEL  shift, and go to state 38

    label  go to state 45


State 7

   35 stack: _RET .

    $default  reduce using rule 35 (stack)


State 8

   20 flowcontrol: _CMP . input _COMMA input

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 46


State 9

   21 flowcontrol: _JMP . label

    _LABEL  shift, and go to state 38

    label  go to state 47


State 10

   22 flowcontrol: _JEQ . label

    _LABEL  shift, and go to state 38

    label  go to state 48


State 11

   23 flowcontrol: _JNE . label

    _LABEL  shift, and go to state 38

    label  go to state 49


State 12

   24 flowcontrol: _JGT . label

    _LABEL  shift, and go to state 38

    label  go to state 50


State 13

   25 flowcontrol: _JLT . label

    _LABEL  shift, and go to state 38

    label  go to state 51


State 14

   26 flowcontrol: _JGE . label

    _LABEL  shift, and go to state 38

    label  go to state 52


State 15

   27 flowcontrol: _JLE . label

    _LABEL  shift, and go to state 38

    label  go to state 53


State 16

   28 flowcontrol: _JC . label

    _LABEL  shift, and go to state 38

    label  go to state 54


State 17

   29 flowcontrol: _JNC . label

    _LABEL  shift, and go to state 38

    label  go to state 55


State 18

   30 flowcontrol: _JO . label

    _LABEL  shift, and go to state 38

    label  go to state 56


State 19

   31 flowcontrol: _JNO . label

    _LABEL  shift, and go to state 38

    label  go to state 57


State 20

   15 arithmetic: _ADD . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 58


State 21

   16 arithmetic: _SUB . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 59


State 22

   17 arithmetic: _MUL . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 60


State 23

   18 arithmetic: _DIV . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 61


State 24

   19 arithmetic: _MOV . input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 62


State 25

   14 asm_line: _HALT .

    $default  reduce using rule 14 (asm_line)


State 26

    5 variable: _LABEL_DEF . @1 _WORD _NUMBER
   10 label_def: _LABEL_DEF .

    _WORD     reduce using rule 4 (@1)
    $default  reduce using rule 10 (label_def)

    @1  go to state 63


State 27

    3 variable_list: variable_list variable .

    $default  reduce using rule 3 (variable_list)


State 28

    1 program: variable_list code_list .
    7 code_list: code_list . code_line

    _PUSH       shift, and go to state 4
    _POP        shift, and go to state 5
    _CALL       shift, and go to state 6
    _RET        shift, and go to state 7
    _CMP        shift, and go to state 8
    _JMP        shift, and go to state 9
    _JEQ        shift, and go to state 10
    _JNE        shift, and go to state 11
    _JGT        shift, and go to state 12
    _JLT        shift, and go to state 13
    _JGE        shift, and go to state 14
    _JLE        shift, and go to state 15
    _JC         shift, and go to state 16
    _JNC        shift, and go to state 17
    _JO         shift, and go to state 18
    _JNO        shift, and go to state 19
    _ADD        shift, and go to state 20
    _SUB        shift, and go to state 21
    _MUL        shift, and go to state 22
    _DIV        shift, and go to state 23
    _MOV        shift, and go to state 24
    _HALT       shift, and go to state 25
    _LABEL_DEF  shift, and go to state 64

    $default  reduce using rule 1 (program)

    code_line    go to state 65
    label_def    go to state 30
    asm_line     go to state 31
    arithmetic   go to state 32
    flowcontrol  go to state 33
    stack        go to state 34


State 29

    6 code_list: code_line .

    $default  reduce using rule 6 (code_list)


State 30

    8 code_line: label_def .

    $default  reduce using rule 8 (code_line)


State 31

    9 code_line: asm_line .

    $default  reduce using rule 9 (code_line)


State 32

   11 asm_line: arithmetic .

    $default  reduce using rule 11 (asm_line)


State 33

   12 asm_line: flowcontrol .

    $default  reduce using rule 12 (asm_line)


State 34

   13 asm_line: stack .

    $default  reduce using rule 13 (asm_line)


State 35

   37 output: _REGISTER .

    $default  reduce using rule 37 (output)


State 36

   41 input: _CONSTANT .

    $default  reduce using rule 41 (input)


State 37

   38 output: _NUMBER . _LPAREN _REGISTER _RPAREN

    _LPAREN  shift, and go to state 66


State 38

   36 label: _LABEL .

    $default  reduce using rule 36 (label)


State 39

   42 input: _ADDRESS .

    $default  reduce using rule 42 (input)


State 40

   39 output: _LPAREN . _REGISTER _RPAREN

    _REGISTER  shift, and go to state 67


State 41

   40 output: label .

    $default  reduce using rule 40 (output)


State 42

   43 input: output .

    $default  reduce using rule 43 (input)


State 43

   32 stack: _PUSH input .

    $default  reduce using rule 32 (stack)


State 44

   33 stack: _POP output .

    $default  reduce using rule 33 (stack)


State 45

   34 stack: _CALL label .

    $default  reduce using rule 34 (stack)


State 46

   20 flowcontrol: _CMP input . _COMMA input

    _COMMA  shift, and go to state 68


State 47

   21 flowcontrol: _JMP label .

    $default  reduce using rule 21 (flowcontrol)


State 48

   22 flowcontrol: _JEQ label .

    $default  reduce using rule 22 (flowcontrol)


State 49

   23 flowcontrol: _JNE label .

    $default  reduce using rule 23 (flowcontrol)


State 50

   24 flowcontrol: _JGT label .

    $default  reduce using rule 24 (flowcontrol)


State 51

   25 flowcontrol: _JLT label .

    $default  reduce using rule 25 (flowcontrol)


State 52

   26 flowcontrol: _JGE label .

    $default  reduce using rule 26 (flowcontrol)


State 53

   27 flowcontrol: _JLE label .

    $default  reduce using rule 27 (flowcontrol)


State 54

   28 flowcontrol: _JC label .

    $default  reduce using rule 28 (flowcontrol)


State 55

   29 flowcontrol: _JNC label .

    $default  reduce using rule 29 (flowcontrol)


State 56

   30 flowcontrol: _JO label .

    $default  reduce using rule 30 (flowcontrol)


State 57

   31 flowcontrol: _JNO label .

    $default  reduce using rule 31 (flowcontrol)


State 58

   15 arithmetic: _ADD input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 69


State 59

   16 arithmetic: _SUB input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 70


State 60

   17 arithmetic: _MUL input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 71


State 61

   18 arithmetic: _DIV input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 72


State 62

   19 arithmetic: _MOV input . _COMMA output

    _COMMA  shift, and go to state 73


State 63

    5 variable: _LABEL_DEF @1 . _WORD _NUMBER

    _WORD  shift, and go to state 74


State 64

   10 label_def: _LABEL_DEF .

    $default  reduce using rule 10 (label_def)


State 65

    7 code_list: code_list code_line .

    $default  reduce using rule 7 (code_list)


State 66

   38 output: _NUMBER _LPAREN . _REGISTER _RPAREN

    _REGISTER  shift, and go to state 75


State 67

   39 output: _LPAREN _REGISTER . _RPAREN

    _RPAREN  shift, and go to state 76


State 68

   20 flowcontrol: _CMP input _COMMA . input

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 77


State 69

   15 arithmetic: _ADD input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 78


State 70

   16 arithmetic: _SUB input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 79


State 71

   17 arithmetic: _MUL input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 80


State 72

   18 arithmetic: _DIV input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 35
    _CONSTANT  shift, and go to state 36
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _ADDRESS   shift, and go to state 39
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 42
    input   go to state 81


State 73

   19 arithmetic: _MOV input _COMMA . output

    _REGISTER  shift, and go to state 35
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 82


State 74

    5 variable: _LABEL_DEF @1 _WORD . _NUMBER

    _NUMBER  shift, and go to state 83


State 75

   38 output: _NUMBER _LPAREN _REGISTER . _RPAREN

    _RPAREN  shift, and go to state 84


State 76

   39 output: _LPAREN _REGISTER _RPAREN .

    $default  reduce using rule 39 (output)


State 77

   20 flowcontrol: _CMP input _COMMA input .

    $default  reduce using rule 20 (flowcontrol)


State 78

   15 arithmetic: _ADD input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 85


State 79

   16 arithmetic: _SUB input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 86


State 80

   17 arithmetic: _MUL input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 87


State 81

   18 arithmetic: _DIV input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 88


State 82

   19 arithmetic: _MOV input _COMMA output .

    $default  reduce using rule 19 (arithmetic)


State 83

    5 variable: _LABEL_DEF @1 _WORD _NUMBER .

    $default  reduce using rule 5 (variable)


State 84

   38 output: _NUMBER _LPAREN _REGISTER _RPAREN .

    $default  reduce using rule 38 (output)


State 85

   15 arithmetic: _ADD input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 35
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 89


State 86

   16 arithmetic: _SUB input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 35
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 90


State 87

   17 arithmetic: _MUL input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 35
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 91


State 88

   18 arithmetic: _DIV input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 35
    _NUMBER    shift, and go to state 37
    _LABEL     shift, and go to state 38
    _LPAREN    shift, and go to state 40

    label   go to state 41
    output  go to state 92


State 89

   15 arithmetic: _ADD input _COMMA input _COMMA output .

    $default  reduce using rule 15 (arithmetic)


State 90

   16 arithmetic: _SUB input _COMMA input _COMMA output .

    $default  reduce using rule 16 (arithmetic)


State 91

   17 arithmetic: _MUL input _COMMA input _COMMA output .

    $default  reduce using rule 17 (arithmetic)


State 92

   18 arithmetic: _DIV input _COMMA input _COMMA output .

    $default  reduce using rule 18 (arithmetic)
